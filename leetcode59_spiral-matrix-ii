int** generateMatrix(int n, int* returnSize, int** returnColumnSizes)
{
  if (n <= 0) {
    return NULL;
  }
  int **retArray = (int **)malloc(sizeof(int *) * n);
  *returnSize = n;
  for (int i = 0; i <= n -1; i++) {
    retArray[i] = (int *)malloc(sizeof(int));
  }
  *returnColumnSizes = malloc(sizeof(int));
  for (int  i = 0; i <= n-1; i++) {
    (*returnColumnSizes)[i] = n;
  }
  int t =1, row_start = 0, col_start = 0, row_end = n, col_end = n;
  int end = n*n;
  while (t <= end) {
        for (i = col_start; i < col_end; i++)
            result[row_start][i] = (t++);
        row_start++;
        for (i = row_start; i< row_end; i++)
            result[i][row_end - 1] = (t++);
        col_end--;
        for (i = col_end - 1; i >= col_start; i--)
            result[row_end - 1][i] = (t++);
        row_end--;
        for (i = row_end - 1; i >= row_start; i--)
            result[i][col_start] = (t++);
        col_start++;
    }
    return result;
}
