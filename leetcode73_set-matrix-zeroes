
void setZeroes(int** matrix, int matrixSize, int* matrixColSize){
    if (matrixSize == 0 || *matrixColSize ==0) {
        return;
    }
    int a[matrixSize];
    int b[*matrixColSize];
    memset(a, -1, sizeof(a));
    memset(b, -1, sizeof(b));
    int i, j, tmp;
    for (i = 0; i< matrixSize; i++) {
        for (j = 0; j < *matrixColSize; j++) {
            if (matrix[i][j] == 0) {
                a[i] = 0;
                b[j] = 0;
            }
        }
    }
    for (i = 0; i < matrixSize; i++) {
        if (a[i] == 0) {
            for (j = 0; j < *matrixColSize; j++) {
                matrix[i][j] = 0;
            }
        }
    }
    for (j = 0; j < *matrixColSize; j++) {
        if (b[j] == 0) {
            for (i = 0; i < matrixSize; i++) {
                matrix[i][j] = 0;
            }
        }
    }
}

//思路：弄两个临时的数组，然后将数组的初始值都置位1，然后遍历寻找原二维数组中值为0的点，分别记录到两个数组中（两个数组代表横坐标和纵坐标），遍历结束后，再遍历横纵两个数组，找到之前已经置位0的点，遍历数组对应的另一个数组，分别置位为0
